name: Build Python Sphinx Docs and push to gh-pages

on:
    push:
        branches:
          - '**'
        paths:
          - 'python/sphinx_docs/**'
    pull_request_target:
        types: closed
        branches: main
        paths:
          - 'python/sphinx_docs/**'
    repository_dispatch:
      types: [docstrings_common_updated, docstrings_simulators_updated]
permissions:
    contents: write
jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout source code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0   # Fetch all history for all tags and branches
        - name: Get docstrings_common.json from master branch of opm-common
          run: |
            curl -L -o python/docstrings_common.json https://raw.githubusercontent.com/${{ github.repository_owner }}/opm-common/master/python/docstrings_common.json
        - name: Get docstrings_common.json from master branch of opm-simulators
          run: |
            curl -L -o python/docstrings_simulators.json https://raw.githubusercontent.com/${{ github.repository_owner }}/opm-simulators/master/python/docstrings_simulators.json
        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: "3.11"
        - name: Install poetry
          uses: OPM/actions-poetry@master
        - name: Install python dependencies
          run: |
            cd python/sphinx_docs
            poetry install
        - name: Build documentation
          run: |
            cd python
            mkdir gh-pages
            touch gh-pages/.nojekyll
            cd sphinx_docs
            # Currently we build only docs for the HEAD of the master/main branch
            # Later we can add release tags to the list to get the docs for the releases
            # For example: -b "main, release/2024.04/final" will build the docs for
            # the main branch and the release/2024.04/final tag
            # For the releases, we create snapshots of the docstrings_common.json and docstrings_simulators.json
            # and take the ones tracked by git, only for the main, we take the current ones we fetched
            # in steps 2 and 3 of this workflow

            # If this is a build for main, then the build the documentation for the main branch
            if [ "${{ github.ref }}" == "refs/heads/main" ]; then
              branch=main
            else
              branch=${{ github.ref }}
            fi
            poetry run sphinx-versioned -m main -b "${branch}" --force --git-root ../../
        - name: Copy documentation to gh-pages
          run: |
            cp -r python/sphinx_docs/docs/_build/* python/gh-pages/
        - name: Deploy documentation for PR merge to main or push to main
          if: github.ref == 'refs/heads/main'
          uses: OPM/github-pages-deploy-action@releases/v2
          with:
            branch: gh-pages
            folder: python/gh-pages
        - name: Deploy documentation for PRs and other branches
          if: github.event_name == 'push' && github.ref != 'refs/heads/main'
          uses: OPM/github-pages-deploy-action@releases/v2
          with:
            branch: gh-pages
            folder: python/gh-pages-${{ github.ref }}   
